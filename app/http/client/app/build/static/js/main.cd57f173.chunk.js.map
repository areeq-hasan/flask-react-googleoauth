{"version":3,"sources":["components/ProfileButton.js","components/Login.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","smallAvatar","width","spacing","height","ProfileButton","props","classes","authenticated","profilePicture","IconButton","onClick","handleLogout","id","Avatar","src","className","Button","color","content","textAlign","marginTop","msg","marginBottom","Login","useState","loginError","setLoginError","authRequired","Typography","variant","gutterBottom","clientId","process","buttonText","onSuccess","d","a","profile","FormData","set","tokenObj","id_token","axios","post","setAuthRequired","completeAuth","onFailure","cookiePolicy","redirectUri","scope","Snackbar","open","autoHideDuration","onClose","Alert","elevation","severity","to","Profile","name","setName","setId","useEffect","get","r","data","user_id","response","status","fetchData","defaults","headers","common","ProtectedRoute","children","rest","createMuiTheme","palette","primary","main","title","flexGrow","App","setProfilePicture","logoutError","showLogoutError","picture","ThemeProvider","CssBaseline","AppBar","position","Toolbar","delete","result","do_logout","noWrap","path","elevated","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd57f173.chunk.js","sourcesContent":["// React.js\nimport React from 'react';\n\n// Style Imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    smallAvatar: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n}));\n\nexport function ProfileButton(props) {\n    const classes = useStyles();\n\n    if (props.authenticated) {\n        return (\n            props.profilePicture ? (\n                <IconButton onClick={props.handleLogout} id=\"ib\">\n                    <Avatar src={props.profilePicture} className={classes.smallAvatar} />\n                </IconButton>\n            ) : (\n                <Button onClick={props.handleLogout} color=\"inherit\">\n                    Logout\n                </Button>\n            )\n        );\n    } else {\n        return <> </>;\n    }\n}","// React.js\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// Google Login\nimport { GoogleLogin } from 'react-google-login';\n\n// Style Imports\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        textAlign: \"center\",\n        marginTop: 40,\n    },\n    msg: {\n        marginBottom: \"20px\",\n    }\n}));\n\nexport function Login(props) {\n    const classes = useStyles();\n    const [loginError, setLoginError] = useState(false);\n\n    function handleLoginSuccess(d) {\n        async function completeAuth() {\n            var profile = new FormData();\n            profile.set(\"id_token\", d.tokenObj.id_token)\n            try {\n                await axios.post('/api/profile', profile);\n                props.setAuthRequired(false);\n            } catch (e) {\n                setLoginError(true);\n            }\n        }\n        completeAuth();\n    }\n\n    function handleLoginFailure(d) {\n        setLoginError(true);\n    }\n\n    // Redirect if authentication is done:\n    if (!props.authRequired)\n        return <Redirect to=\"/\" />;\n\n    return (\n        <div className={classes.content}>\n            <Typography\n                variant=\"h5\"\n                gutterBottom={true}\n                className={classes.msg}\n            >Login to access application content.</Typography>\n            <GoogleLogin\n                clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                buttonText=\"Google Login\"\n                onSuccess={handleLoginSuccess}\n                onFailure={handleLoginFailure}\n                cookiePolicy={\"single_host_origin\"}\n                redirectUri=\"postmessage\"\n                scope=\"openid\"\n            />\n            <Snackbar open={loginError} autoHideDuration={10000} onClose={() => setLoginError(false)}>\n                <Alert elevation={6} severity=\"error\" variant=\"filled\">There was an error logging in.</Alert>\n            </Snackbar>\n        </div>\n    );\n}","// React.js\nimport React, { useEffect, useState } from 'react';\n\n// Style Imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        textAlign: \"center\",\n        marginTop: 40,\n    },\n}));\n\nexport function Profile(props) {\n    const classes = useStyles();\n    const [name, setName] = useState(\"\");\n    const [id, setId] = useState(\"\");\n    const [authRequired, setAuthRequired] = [props.authRequired, props.setAuthRequired];\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const r = await axios.get('/api/profile')\n                setName(r.data.name);\n                setId(r.data.user_id);\n            } catch (e) {\n                if (e.response && e.response.status === 401) setAuthRequired(true);\n            }\n        };\n        fetchData();\n    }, [authRequired, setAuthRequired])\n\n    if (name && id) {\n        return (\n            <div className={classes.content}>\n                <Typography variant=\"h4\">\n                    Hello, {name}.\n                </Typography>\n                <Typography variant=\"body1\">\n                    Click your profile picture to log out.\n                </Typography>\n                <Typography variant=\"body1\">\n                    User ID: {id}.\n                </Typography>\n            </div>\n        );\n    } else return (\n        <div className={classes.content}>\n            <Typography variant=\"h5\">\n                Loading...\n            </Typography>\n        </div>\n    );\n}","// React.js Imports\nimport React, { useEffect, useState } from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n\n// Utility Imports\nimport axios from 'axios';\n\n// Style Imports\nimport { makeStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './App.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\n// Component Imports\nimport { ProfileButton } from \"./components/ProfileButton\";\nimport { Login } from './components/Login';\nimport { Profile } from './components/Profile';\n\naxios.defaults.headers.common['X-Requested-With'] = 'XmlHttpRequest';\n\nconst ProtectedRoute = ({ children, authRequired, ...rest }) => {\n  return (\n    <Route {...rest}>\n      {!authRequired ? children : <Redirect to='/login'></Redirect>}\n    </Route>\n  );\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    // type: 'dark',\n    primary: {\n      main: '#1976d2',\n    },\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n  }\n}));\n\nfunction App(props) {\n  const classes = useStyles(theme);\n\n  const [authRequired, setAuthRequired] = useState(false);\n  const [profilePicture, setProfilePicture] = useState(null);\n  const [logoutError, showLogoutError] = useState(false);\n\n  function handleLogout() {\n    async function do_logout() {\n      try {\n        const result = await axios.delete('/api/profile');\n        if (result.status === 200 || result.status === 204) setAuthRequired(true);\n      } catch (e) {\n        showLogoutError(true);\n      }\n    }\n    do_logout();\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!authRequired) {\n        try {\n          const r = await axios.get('/api/profile');\n          setProfilePicture(r.data.picture);\n        } catch (e) {\n          if (e.response) {\n            if (e.response.status === 401) setAuthRequired(true);\n          }\n        }\n      } else setProfilePicture(null);\n    };\n    fetchData();\n  }, [authRequired]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <ProfileButton\n            handleLogout={handleLogout}\n            authenticated={!authRequired}\n            profilePicture={profilePicture}\n          />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Google OAuth2.0\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <HashRouter>\n        <Switch>\n          <Route path=\"/login\">\n            <Login\n              authRequired={authRequired} setAuthRequired={setAuthRequired}\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n            />\n          </Route>\n          <ProtectedRoute authRequired={authRequired} path=\"/\">\n            <Profile setAuthRequired={setAuthRequired} />\n          </ProtectedRoute>\n        </Switch>\n      </HashRouter>\n\n      <Snackbar\n        open={logoutError}\n        autoHideDuration={10000}\n        onClose={() => showLogoutError(false)}\n      >\n        <Alert variant=\"filled\" elevated={6} severity=\"error\">\n          Couldn't log out\n        </Alert>\n      </Snackbar>\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}